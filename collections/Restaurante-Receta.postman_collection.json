{
	"info": {
		"_postman_id": "b4288e4a-0a02-4503-acc6-a5f3766f6eab",
		"name": "Restaurante-Receta",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23039942"
	},
	"item": [
		{
			"name": "Obtener autorizacion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"token\", data.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"username\": \"admin\",\n   \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Restaurante (test)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"restaurante_global_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Pajares\",\n    \"img\": \"www.freeImages.com/datos/pajares-img.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				},
				"description": "Crea un restaurante nuevo. Retorna un mensaje de éxito."
			},
			"response": [
				{
					"name": "Add Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/v1/restaurantes",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\"\n}"
				}
			]
		},
		{
			"name": "Add Receta (test)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"receta_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Changua\",\n    \"descripcion\": \"Un plato tradicional\",\n    \"imagen\": \"http://we.freeimages.com/myImage.jpg\",\n    \"video\": \"http://we.freevideos.com/myVideo.mp4\",\n    \"proceso\": \"Se prepara y luego se come.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"recetas"
					]
				},
				"description": "Crea un restaurante nuevo. Retorna un mensaje de éxito."
			},
			"response": [
				{
					"name": "Add Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/v1/restaurantes",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\"\n}"
				}
			]
		},
		{
			"name": "Add Receta a Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas/{{receta_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas",
						"{{receta_id}}"
					]
				},
				"description": "Asocia una estrella michelín a un restaurante."
			},
			"response": [
				{
					"name": "Add Estrella Michelin a Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\",\n    \"estrellasMichelin\": [\n        {\n            \"id\": \"11\",\n            \"fechaDeObtencion\": \"26/09/20\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Add Receta Invalida a Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Receta dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}",
						"recetas",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Intenta asociar una estrella michelín inexistente a un restaurante. Retorna un mensaje de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Add Receta Invalida a Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La estrella michelin con el id dado no fue encontrada.\"\n}"
				}
			]
		},
		{
			"name": "Add Receta a Restaurante Invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Restaurante dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"00000000-0000-0000-0000-000000000000",
						"recetas",
						"{{receta_id}}"
					]
				},
				"description": "Intenta añadir una estrella michelín a un restaurante inexistente. Retorna un código de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Add Estrella Michelin a Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado.\"\n}"
				}
			]
		},
		{
			"name": "Get Una Receta de un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas/{{receta_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas",
						"{{receta_id}}"
					]
				},
				"description": "Recupera una estrella michelín asociada a un restaurante."
			},
			"response": [
				{
					"name": "Get Una Receta de un Restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/{{receta_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"{{receta_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"11\",\n    \"fechaDeObtencion\": \"26/09/20\"\n}"
				}
			]
		},
		{
			"name": "Get Receta Invalida de un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Receta dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get Receta Invalida a Restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La estrella michelin con el id dado no fue encontrado.\"\n}"
				}
			]
		},
		{
			"name": "Get Receta de un Restaurante Invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Restaurante dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"00000000-0000-0000-0000-000000000000",
						"recetas",
						"{{receta_id}}"
					]
				},
				"description": "Intenta recuperar una estrella michelin inexistente asociada a un restaurante. Retorna un código de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Get Receta de un Restaurante Invalido",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/0000-000-00/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"0000-000-00",
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado.\"\n}"
				}
			]
		},
		{
			"name": "Add Receta (test) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"receta_id2\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Changua\",\n    \"descripcion\": \"Un plato tradicional\",\n    \"imagen\": \"http://we.freeimages.com/myImage.jpg\",\n    \"video\": \"http://we.freevideos.com/myVideo.mp4\",\n    \"proceso\": \"Se prepara y luego se come.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"recetas"
					]
				},
				"description": "Crea un restaurante nuevo. Retorna un mensaje de éxito."
			},
			"response": [
				{
					"name": "Add Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/v1/restaurantes",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"restaurantes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\"\n}"
				}
			]
		},
		{
			"name": "Get Receta no asociada a un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Receta dada no se encuentra asociada a Restaurante dado.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas/{{receta_id2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas",
						"{{receta_id2}}"
					]
				},
				"description": "Intenta recuperar una estrella michelín que no está asociada a ese restaurante. Retorna un código de error, porque esa asociación no existe."
			},
			"response": [
				{
					"name": "Get Receta no asociada a un Restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/{{receta_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"{{receta_id2}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"La estrella michelín solicitada no está asociada a este restaurante.\"\n}"
				}
			]
		},
		{
			"name": "Get All Recetas de un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas"
					]
				},
				"description": "Recupera todas las estrellas michelín asociadas a un restaurante."
			},
			"response": [
				{
					"name": "Get All Recetas de un Restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"11\",\n        \"fechaDeObtencion\": \"26/09/20\"\n    },\n    {\n        \"id\": \"12\",\n        \"fechaDeObtencion\": \"20/06/21\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get All Recetas de un Restaurante Invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Restaurante dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"00000000-0000-0000-0000-000000000000",
						"recetas"
					]
				},
				"description": "Intenta recuperar todas las estrellas michelín asociadas a un restaurante inexistente. Retorna un código de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Get All Recetas de un Restaurante Invalido",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/0000-000-00/estrellas-michelin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"0000-000-00",
								"estrellas-michelin"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"El restaurante con el id dado no fue encontrado.\"\n}"
				}
			]
		},
		{
			"name": "Actualizar lista de Recetas de un Restaurante",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{estrella_id}}\"\n    },\n        {}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas"
					]
				},
				"description": "Actualiza la lista de estrellas michelín asociadas a un restaurante."
			},
			"response": [
				{
					"name": "Actualizar lista de Recetas de un Restaurante",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"21\",\n        \"fechaDeObtencion\": \"26/09/20\"\n    },\n    {\n        \"id\": \"22\",\n        \"fechaDeObtencion\": \"20/06/21\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Pajares\",\n    \"img\": \"./datos/pajares-img.jpg\",\n    \"estrellasMichelin\": [\n        {\n            \"id\": \"21\",\n            \"fechaDeObtencion\": \"26/09/20\"\n        },\n        {\n            \"id\": \"22\",\n            \"fechaDeObtencion\": \"20/06/21\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Actualizar lista de Recetas Invalidas de un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"La receta con el solicitado id no existe\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n   \"00000000-0000-0000-0000-000000000000\"\n\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas"
					]
				},
				"description": "Intenta actualizar la lista de estrellas michelin de un restaurante con una lista con id inexistentes. Retorna un código de error al no existir dichas estrellas."
			},
			"response": [
				{
					"name": "Actualizar lista de Recetas Invalidas de un Restaurante",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"0000-000-00\",\n        \"fechaDeObtencion\": \"12/12/12\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"La estrella michelin con el id dado no fue encontrada.\"\n}"
				}
			]
		},
		{
			"name": "Actualizar lista de Recetas de un Restaurante Invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"La receta con el solicitado id no existe\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{estrella_id2}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"00000000-0000-0000-0000-000000000000",
						"recetas"
					]
				},
				"description": "Intenta actualizar la lista de estrellas michelín de un restaurante inexistente. Retorna un código de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Actualizar lista de Recetas de un Restaurante Invalido",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{estrella-id-2}}\",\n        \"fechaDeObtencion\": \"12/12/12\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"00000000-0000-0000-0000-000000000000",
								"recetas"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado.\"\n}"
				}
			]
		},
		{
			"name": "Delete una Receta de un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_global_id}}/recetas/{{receta_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_global_id}}",
						"recetas",
						"{{receta_id}}"
					]
				},
				"description": "Borra una asociación entre una estrella y un restaurante."
			},
			"response": [
				{
					"name": "Delete una Receta de un Restaurante",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete una Receta Invalida de un Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Receta dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}",
						"recetas",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Intenta borrar la asociación entre una estrella inexistente y un restaurant. Retorna un código de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Delete una Receta Invalida de un Restaurante",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}/recetas/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La estrella michelin con el id dado no fue encontrada.\"\n}"
				}
			]
		},
		{
			"name": "Delete una Receta de un Restaurante Invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.mensaje).to.eql(\"Restaurante dada no fue encontrada.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"00000000-0000-0000-0000-000000000000",
						"recetas",
						"{{receta_id}}"
					]
				},
				"description": "Intenta borrar la asociación de una estrella con un restaurante inexistente. Retorna un código de error al no encontrar el recurso."
			},
			"response": [
				{
					"name": "Delete una Receta de un Restaurante Invalido",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/00000000-0000-0000-0000-000000000000/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"00000000-0000-0000-0000-000000000000",
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado.\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "restaurante_id",
			"value": "1"
		},
		{
			"key": "estrella-id-1",
			"value": "11"
		},
		{
			"key": "estrella-id-2",
			"value": "21"
		}
	]
}